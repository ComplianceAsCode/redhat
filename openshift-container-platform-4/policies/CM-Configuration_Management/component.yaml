##
## BEGINNING OF:
## CONFIGURATION MANAGEMENT
##

# ADMINISTRATORS NOTE ON CM-2:
#       Implementation of this control varies greatly between customers. Some
#       want centralized config management, while others expect component
#       administrators to handle this (e.g. maintain custom Ansible scripts).
#       In Red Hat's OpenControl content CM-2 is handled at the PMO level,
#       however it's best to double check with the Information System owner
#       on expectations (component vs central CM).
#

- control_key: CM-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        Developing, documenting, and disseminating an organizational configuration
        management policy is outside the scope of OpenShift configuration.
    - key: b
      text: |
        Review and update procedures to the organizational configuration
        management policy is outside the scope of OpenShift configuration.

- control_key: CM-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        The recommended approach for configuration management in the OpenShift Container
        platform is to implement the principles and patterns of GitOps

        GitOps uses Git pull requests to manage infrastructure and application configurations.
        The Git repository is considered the only source of truth and contains the
        entire state of the system so that the trail of changes to the system state are
        visible and auditable.

        Operators are a method of packaging, deploying, and managing a Kubernetes
        application. Watching over the OpenShift environment, using its current
        state to make decisions in real time. The Machine Config Operator (MCO)
        manages updates and configuration changes to essentially everything between
        the kernel and kubelet.

        For additional information:
        https://docs.openshift.com/container-platform/latest/architecture/cicd_gitops.html
        https://docs.openshift.com/container-platform/latest/operators/olm-what-operators-are.html

        Red Hat Advanced Cluster Management for Kubernetes (RHACM) is the preferred way of implementing
        and managing GitOps for OpenShift clusters. For more information on creating and managing
        channels for GitOps approaches using RHACM, see:

        https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html-single/manage_applications/index#creating-and-managing-channels

- control_key: CM-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        The organization reviewing and updating the baseline configuration of
        OpenShift per an organization-defined frequency is outside the scope of
        OpenShift configuration.

        However to assist in formulating a control response,
        GitOps uses Git pull requests to manage infrastructure and application configurations.
        The Git repository is considered the only source of truth and contains the
        entire state of the system so that the trail of changes to the system state are
        visible and auditable. For more on using Git and GitOps see:

        https://docs.openshift.com/container-platform/latest/architecture/cicd_gitops.html

        Red Hat Advanced Cluster Management for Kubernetes (RHACM) is the preferred way of implementing
        and managing GitOps for OpenShift clusters. For more information on creating and managing
        channels for GitOps approaches using RHACM, see:

        https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html-single/manage_applications/index#creating-and-managing-channels

    - key: b
      text: |
        The organization reviewing and updating the baseline configuration of
        OpenShift when required due to organization-defined circumstances is outside the scope of
        OpenShift configuration.

        However to assist in formulating a control response, GitOps uses Git pull requests to manage infrastructure and application configurations.
        The Git repository is considered the only source of truth and contains the
        entire state of the system so that the trail of changes to the system state are
        visible and auditable. For more on using Git and GitOps see:

        https://docs.openshift.com/container-platform/latest/architecture/cicd_gitops.html

        Red Hat Advanced Cluster Management for Kubernetes (RHACM) is the preferred way of implementing
        and managing GitOps for OpenShift clusters. For more information on creating and managing
        channels for GitOps approaches using RHACM, see:

        https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html-single/manage_applications/index#creating-and-managing-channels

    - key: c
      text: |
        The organization reviewing and updating the baseline configuration of
        OpenShift as an integral part of OpenShift component installations and upgrades
        is outside the scope of OpenShift configuration.

        However to assist in formulating a control response,  GitOps uses Git pull requests
        to manage infrastructure and application configurations.
        The Git repository is considered the only source of truth and contains the
        entire state of the system so that the trail of changes to the system state are
        visible and auditable. For more on using Git and GitOps see:

        https://docs.openshift.com/container-platform/latest/architecture/cicd_gitops.html

        Red Hat Advanced Cluster Management for Kubernetes (RHACM) is the preferred way of implementing
        and managing GitOps for OpenShift clusters. For more information on creating and managing
        channels for GitOps approaches using RHACM, see:

        https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html-single/manage_applications/index#creating-and-managing-channels



- control_key: CM-2 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        All of Red Hat OpenShift's control plane components are managed by operators.
        Operators themselves expose functionality and configuration through
        declarative objects that can be represented as YAML files, but ultimately
        get stored and persisted in etcd. Due to the declarative nature of
        how operators work, Red Hat OpenShift inherently meets this requirement as it's
        trivial and encouraged for administrators to store the YAML files that
        are used to configure the cluster in means that allow for further automation.
        This goes from the high level control plane components, down to the Operating
        System configurations. It's all managed through Kubernetes Objects.

        This allows for keeping the cluster's configuration in git and establishing
        a GitOps sort of workflow for configuring the cluster and ensuring that
        configuration changes are tracked, audited, and stored securely.

        Furthermore, Red Hat Advanced Cluster Manager allows for managing
        multiple clusters and their configurations centrally and securely [1].

        Customers must then choose what path do they want to take to store their baseline
        configurations and enforce their usage.

        [1] https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/

- control_key: CM-2 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        The organization retaining an organization-defined number of previous versions of baseline
        configurations of the information system to support rollback is an organizational control
        outside the scope of OpenShift configuration.

        However to assist in formulating a control response, GitOps uses Git pull requests
        to manage infrastructure and application configurations.
        The Git repository is considered the only source of truth and contains the
        entire state of the system so that the trail of changes to the system state are
        visible and auditable. For more on using Git and GitOps see:

        https://docs.openshift.com/container-platform/latest/architecture/cicd_gitops.html

        Red Hat Advanced Cluster Management for Kubernetes (RHACM) is the preferred way of implementing
        and managing GitOps for OpenShift clusters. For more information on creating and managing
        channels for GitOps approaches using RHACM, see:

        https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html-single/manage_applications/index#creating-and-managing-channels


- control_key: CM-2 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control was withdrawn by NIST.

- control_key: CM-2 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control was withdrawn by NIST.

- control_key: CM-2 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: partial
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-264

- control_key: CM-2 (7)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        Organizational issuance of organization-defined information
        systems, system components, or devices with organizational-defined
        configurations to individuals traveling to locations that the
        organization deems to be of significant risk is outside the scope
        of OpenShift configuration.
    - key: b
      text: |
        Organizational processes to apply organization-defined security
        safeguards to the devices when the individuals return is
        outside the scope of OpenShift configuration.

- control_key: CM-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        The organization reviewing the types of changes that should be
        configuration controlled is out of scope from OpenShift.
    - key: b
      text: |
        The organization approving configuration controlled changes
        to the system is out of scope from OpenShift.
    - key: c
      text: |
        The organization documented the decisions for configuration changes
        to the system is out of scope from OpenShift.
    - key: d
      text: |
        The organization implementing approved configuration changes
        to the system is out of scope from OpenShift.
    - key: e
      text: |
        The organization maintaining records of the configuration-controlled
        changes to the system is out of scope from OpenShift. However,
        OpenShift allows for such capability since all configurations of
        OpenShift are done through operators, which are configured through
        Kubernetes objects which can be stored and even version-controlled.

        Any change to the system will generate an audit log that allows for
        determining when a change is made. And having a GitOps approach to
        managing the system allows for tracking the change approvals.
    - key: f
      text: |
        The organization auditing activities related to configuration
        changes to the system is out of scope from OpenShift. However,
        OpenShift allows for such capability since all configurations of
        OpenShift are done through operators, which are configured through
        Kubernetes objects which can be stored and even version-controlled.

        Any change to the system will generate an audit log that allows for
        determining when a change is made. And having a GitOps approach to
        managing the system allows for tracking the change approvals.
    - key: g
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-3 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: b
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: c
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: d
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: e
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: f
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-3 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-3 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: partial
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-266

- control_key: CM-3 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        The requirement for an information security representative to be
        a member of the organization-defined configuration change
        control element is outside the scope of OpenShift configuration.

- control_key: CM-3 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: partial
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-267

- control_key: CM-3 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: partial
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-268

- control_key: CM-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Organizational analysis of changes to the information system to
        determine potential security impacts prior to change implementation
        is outside the scope of OpenShift configuration.

- control_key: CM-4 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Organizational analysis of changes to the information system to
        determine potential security impacts in a test environment prior
        to change implementation is outside the scope of OpenShift
        configuration.

- control_key: CM-4 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Verification of security function implementation and status is an organizational
        policy and procedure control. This functionality is outside the scope of OpenShift
        configuration.

        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-270

- control_key: CM-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Defining, documenting, approving, and enforcing physical and logical access restrictions
        associated with changes to the information system is an organizational control outside
        the scope of OpenShift configuration.

        However to assist in developing policies/procedures to address this control, use of Role-based
        Access Control (RBAC) and the architecture of OpenShift provide logical access restrictions
        based on user and group roles in addition to logical separation of systems and components.

        See the following for more information on RBAC and OpenShift architecture:

        https://docs.openshift.com/container-platform/latest/architecture/architecture.html
        https://docs.openshift.com/container-platform/latest/authentication/using-rbac.html

- control_key: CM-5 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        OpenShift enforces access restrictions through RBAC, which is
        enabled and enforcing by default [1]. Every action in the system
        is audited with relevant information about the time of the event,
        the user involved, the source and destination of the action, the
        Kubernetes object involved, and the enforcement (RBAC) decision taken
        for that action.

        [1] https://docs.openshift.com/container-platform/latest/authentication/using-rbac.html
        [2] https://docs.openshift.com/container-platform/4.7/security/audit-log-view.html

- control_key: CM-5 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-5 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        OpenShift allows for enforcing that only signed and verified
        containers run on the platform [1]. This is not enabled by default
        and needs to be configured per the customer's environment and
        requirements.

        [1] https://docs.openshift.com/container-platform/4.7/security/container_security/security-deploy.html

- control_key: CM-5 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-271

- control_key: CM-5 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        OpenShift inherently meets this requirement as adding additional Operators
        requires admin RBAC permissions. Regular users are not able to install
        extra operators in the system.

        On the other hand, deploying additional workloads requires that users have
        access to the target namespace. Which is also protected by RBAC. Users need
        to have explicit permission in order to add or remove components from namespaces. [1]

        [1] https://docs.openshift.com/container-platform/4.7/authentication/using-rbac.html
    - key: b
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-5 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-5 (7)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control was withdrawn by NIST.

- control_key: CM-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        Customers should document the configuration settings applicable to their
        deployments and ensure that appropriate hardening settings are in place.
        Red Hat provides a hardening guide that's useful to help customers get
        a reasonable hardened configuration. [1]

        [1] https://access.redhat.com/solutions/5870581
    - key: b
      text: |
        A hardened configuration can be implemented by the customer, however
        OpenShift's Compliance Operator [1] provides some automated remediations
        and checks to verify that the hardened configuration has been implemented
        correctly.

        [1] https://docs.openshift.com/container-platform/4.7/security/compliance_operator/compliance-operator-understanding.html#compliance-operator-understanding
    - key: c
      text: |
        It is the customer's responsibility to document deviations from the
        recommended hardened settings. In case of using the Compliance Operator,
        this can be achieved by filling in appropriate details in the `rationale`
        sections in the TailoredProfile objects. [1]

        [1] https://docs.openshift.com/container-platform/4.7/security/compliance_operator/compliance-operator-tailor.html
    - key: d
      text: |
        Monitoring and controlling changes to the configuration itself is out of
        OpenShift's scope. However, any changes to the system will be audited by the
        platform. Further change control and management can be achieved by following
        a GitOps workflow, which enables one to track who made and authorized
        changes to the system.

- control_key: CM-6 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Automatic and central management of OpenShift's own configuration is
        out of scope for OpenShift itself. Customers can, however, use GitOps
        to have such a workflow with systems such as OpenShift GitOps or
        Red Hat Advanced Cluster Manager.

- control_key: CM-6 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-6 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control was withdrawn by NIST.

- control_key: CM-6 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control was withdrawn by NIST.

- control_key: CM-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        Red Hat OpenShift is targeted at running containers, and thus it
        contains the minimal components to provide a secure, reliable
        and operable container platform. It also runs over Red Hat CoreOS, [1]
        which only contains a subset of packages that RHEL would usually have.
        This subset is the minimum required to run OpenShift.

        [1] https://docs.openshift.com/container-platform/4.7/architecture/architecture-rhcos.html
    - key: b
      text: |
        Within OpenShift, as in Kubernetes, restrictions on network communications (open
        ports and protocols) can be done by using NetworkPolicies [1]. This allows
        administrators to restrict the traffic to and within a namespace.

        Further restrictions should be done from the cloud that's running OpenShift,
        or the infrastructure that the platform is running on.

        [1] https://docs.openshift.com/container-platform/4.7/networking/network_policy/about-network-policy.html

- control_key: CM-7 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        It is up to the customer to review the deployment to identify the minimal
        needed services, network protocols and ports that need to be enabled in
        the system.

        For OpenShift, there is a comprehensive list in the documentation [1]

        [1] https://docs.openshift.com/container-platform/4.7/installing/install_config/configuring-firewall.html
    - key: b
      text: |
        Within OpenShift, as in Kubernetes, restrictions on network communications (open
        ports and protocols) can be done by using NetworkPolicies [1]. This allows
        administrators to restrict the traffic to and within a namespace.

        Further restrictions should be done from the cloud that's running OpenShift,
        or the infrastructure that the platform is running on.

        [1] https://docs.openshift.com/container-platform/4.7/networking/network_policy/about-network-policy.html

- control_key: CM-7 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        Red Hat OpenShift allows for configuring the platform in such a way
        that only signed containers will be accepted for scheduling. [1] [2]

        Red Hat signs the images provided for running the platform, as well
        as the base images that are usable for building other workloads.

        Customers should be careful to enforce image signing on their own images.

        [1] https://docs.openshift.com/container-platform/4.7/security/container_security/security-container-signature.html
        [2] https://docs.openshift.com/container-platform/4.7/security/container_security/security-deploy.html#security-deploy-image-sources_security-deploy

- control_key: CM-7 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-276

- control_key: CM-7 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - key: a
      text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-204
    - key: b
      text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-204
    - key: c
      text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-204

- control_key: CM-7 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        Red Hat OpenShift allows for configuring the platform in such a way
        that only signed containers will be accepted for scheduling. [1] [2]

        Red Hat signs the images provided for running the platform, as well
        as the base images that are usable for building other workloads.

        Customers should be careful to enforce image signing on their own images.

        It is relevant to configure the policy file to only accept containers
        from authorized registries.

        [1] https://docs.openshift.com/container-platform/4.7/security/container_security/security-container-signature.html
        [2] https://docs.openshift.com/container-platform/4.7/security/container_security/security-deploy.html#security-deploy-image-sources_security-deploy
    - key: b
      text: |
        Red Hat OpenShift allows for configuring the platform in such a way
        that only signed containers will be accepted for scheduling. [1] [2]

        Red Hat signs the images provided for running the platform, as well
        as the base images that are usable for building other workloads.

        Customers should be careful to enforce image signing on their own images.

        It is relevant to configure the policy file to only accept containers
        from authorized registries.

        [1] https://docs.openshift.com/container-platform/4.7/security/container_security/security-container-signature.html
        [2] https://docs.openshift.com/container-platform/4.7/security/container_security/security-deploy.html#security-deploy-image-sources_security-deploy
    - key: c
      text: |
        Red Hat OpenShift allows for configuring the platform in such a way
        that only signed containers will be accepted for scheduling. [1] [2]

        Red Hat signs the images provided for running the platform, as well
        as the base images that are usable for building other workloads.

        Customers should be careful to enforce image signing on their own images.
        They should also review their own image registries to ensure that only
        allowed images are served there.

        [1] https://docs.openshift.com/container-platform/4.7/security/container_security/security-container-signature.html
        [2] https://docs.openshift.com/container-platform/4.7/security/container_security/security-deploy.html#security-deploy-image-sources_security-deploy

#       ADMINISTRATORS NOTE ON CM-8:
#       Implementation of this control varies between customers. Some agencies
#       maintain an inventory that state "OpenShift 4.x," whereas others want
#       named RPMs installed on the OpenShift components. The vast majority
#       follow the "OpenShift 4.x" listings. For those that do not, and want
#       complete listings of underlying RPMs, the following section should be
#       uncommented and updated.
#
#       If Satellite is managing the OpenShift nodes, documenting how OpenShift
#       components integrate into Satellite for centralized inventory management
#       is perfectly acceptable.
#
- control_key: CM-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        It is up to the customer to review and implement an appropriate
        system component inventory. However, Red Hat provides tools that can
        aid customers in generating such inventories and keeping them up-to-date.

        A summary of the cluster's specification is available through the
        ClusterVersion object [1]. This will provide information both on the version
        and the specific container hash used. A list of the control plane operators
        used for managing Red Hat OpenShift is available through the ClusterOperator
        object [2].

        Knowing this information, it's possible to get the list of packages for the
        underlying hosts, as well as their versions. This can be done by
        inspecting OpenShift's payload [3].

        Installed operators with their respective versions can be listed through the
        ClusterServiceVersion [4] object. Note that this is a namespaced resource, so
        all namespaces need to be inspected.

        Finally, Red Hat also provides the Skopeo [5] and Podman [6] to further inspect
        any container images used in the deployment. These tools can help fill out extra
        details about the contents of the containers used in the system.

        [1] https://docs.openshift.com/container-platform/4.7/support/summarizing-cluster-specifications.html
        [2] https://docs.openshift.com/container-platform/4.7/installing/validating-an-installation.html#getting-cluster-version-and-update-details_validating-an-installation
        [3] https://access.redhat.com/solutions/5787001
        [4] https://docs.openshift.com/container-platform/4.7/operators/understanding/olm/olm-understanding-olm.html#olm-csv_olm-understanding-olm
        [5] https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/building_running_and_managing_containers/index#skopeo
        [6] https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/building_running_and_managing_containers/index#podman
    - key: b
      text: |
        It is up to the customer to ensure that the system component
        inventory is kept up-to-date.

- control_key: CM-8 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        The organization is responsible for updating the inventory of information
        system components as an integral part of component installations, removals,
        and information system updates.

        During an install, update, or removal, the OpenShift cluster will roll out updates
        for the system software inventory including the CoreOS nodes. More about updating
        to help with creating procedures and processes related to this control can be viewed
        at:

        https://docs.openshift.com/container-platform/latest/updating/updating-cluster-between-minor.html

- control_key: CM-8 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-279

- control_key: CM-8 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - key: a
      text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-280
    - key: b
      text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-280

- control_key: CM-8 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Organizational processes to include in the information system
        component inventory information, a means for identifying
        by name, position, and/or role, individuals responsible/accountable
        for administering those components, is outside the scope
        of OpenShift configuration.

- control_key: CM-8 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Organizational verification that all components within the
        authorization boundary of the information system are not
        duplicated in other information system component
        inventories is outside the scope of OpenShift configuration.

- control_key: CM-8 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        A complete control response is planned. Engineering progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-282

- control_key: CM-8 (7)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: partial
  narrative:
    - text: |
        A complete control response is planned. Progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-283

- control_key: CM-8 (8)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-8 (9)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        Organizational assignment of organization-defined acquired information
        system components to an information system is outside the scope
        of OpenShift configuration.
    - key: b
      text: |
        Organizational processes to receive an acknowledgement from the
        information system owner of the assignment in CM-8(8)(a) is outside
        the scope of OpenShift configuration.

- control_key: CM-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: b
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: c
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.
    - key: d
      text: |
        This control reflects organizational processes outside the scope
        of OpenShift configuration guidance.

- control_key: CM-9 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Organizational processes to assign responsibility for developing the
        configuration management process to organizational personnel that are
        not directly involved in information system development are outside
        the scope of OpenShift configuration.

- control_key: CM-10
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        Ensuring that the organization uses software and associated
        documentation in accordance with contract agreements and copyright laws
        is the complete responsibility of the organization. Red Hat's
        responsibilities to assist with the tracking of software licensing and
        usage of software provided by Red Hat will be fulfilled in accordance
        with all applicable contracts and agreements established for the
        project with the organization.
    - key: b
      text: |
        Tracking the use of software and associated documentation protected by
        quantity licenses to control copying and distribution is an
        organizational control outside the scope of OpenShift.

        However to assist Systems Administrators and Security personnel in
        tracking OpenShift subscriptions, the OpenShift Cluster Manager (OCM)
        service acts as a bridge to Red Hat Subscription Manager. A cluster
        connected to the internet can send telemetry to OpenShift Cluster
        Manager at https://cloud.redhat.com/openshift/, which then handles
        integration with Red Hat Subscription Manager to track subscriptions
        for OpenShift clusters.

        For disconnected clusters, there is no way to send telemetry data to
        OpenShift Cluster Manager. In this case, the organization must manually
        register their disconnected clusters with OpenShift Cluster Manager
        following the instructions at https://access.redhat.com/solutions/4930131
    - key: c
      text: |
        Controlling and documenting the use of peer-to-peer file sharing
        technology to ensure that this capability is not used for the
        unauthorized distribution, display, performance, or reproduction
        of copyrighted work is an organizational control outside the scope
        of OpenShift configuration.

- control_key: CM-10 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        Establishment of organizational restrictions on open source software
        is outside the scope of OpenShift configuration.

# ADMINISTRATORS NOTE ON CM-11:
#       This would be a good place to demarcate installation of software
#       on the OSE nodes vs installation of software in trusted registries.
#
- control_key: CM-11
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        Developing, documenting, and disseminating an organizational policy
        governing the installation  of software by users
        is outside the scope of OpenShift configuration.
    - key: b
      text: |
        Red Hat OpenShift allows for configuring the platform in such a way
        that only signed containers will be accepted for scheduling. [1] [2]

        Red Hat signs the images provided for running the platform, as well
        as the base images that are usable for building other workloads.

        Customers should be careful to enforce image signing on their own images.

        In addition, Red Hat OpenShift allows limiting he container image
        registries from which normal users can import images by setting
        allowedRegistriesForImport[3]

        [1] https://docs.openshift.com/container-platform/4.7/security/container_security/security-container-signature.html
        [2] https://docs.openshift.com/container-platform/4.7/security/container_security/security-deploy.html#security-deploy-image-sources_security-deploy
        [3] https://docs.openshift.com/container-platform/4.7/openshift_images/image-configuration.html
    - key: c
      text: |
        Red Hat OpenShift allows for configuring the platform in such a way
        that only signed containers will be accepted for scheduling. [1] [2]

        Red Hat signs the images provided for running the platform, as well
        as the base images that are usable for building other workloads.

        Customers should be careful to enforce image signing on their own images.

        In addition, Red Hat OpenShift allows limiting he container image
        registries from which normal users can import images by setting
        allowedRegistriesForImport[3]

        [1] https://docs.openshift.com/container-platform/4.7/security/container_security/security-container-signature.html
        [2] https://docs.openshift.com/container-platform/4.7/security/container_security/security-deploy.html#security-deploy-image-sources_security-deploy
        [3] https://docs.openshift.com/container-platform/4.7/openshift_images/image-configuration.html

- control_key: CM-11 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        A complete control response is planned. Progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-286

- control_key: CM-11 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        A complete control response is planned. Progress can be
        tracked via:

        https://issues.redhat.com/browse/CMP-287
